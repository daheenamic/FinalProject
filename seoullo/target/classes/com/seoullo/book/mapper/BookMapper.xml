<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.seoullo.book.mapper.BookMapper">

	<!-- 예약리스트 (관리자용) -->
	<select id="list" resultType="com.seoullo.book.vo.BookVO">
		SELECT no, payStatus, payPrice, payMethod, id
		FROM (
			SELECT rownum rnum, no, payStatus, payPrice, payMethod, id
			FROM (
				SELECT DISTINCT b.no, b.payStatus, b.payPrice, b.payMethod, m.id
				FROM booking b, member m, tour t, bookdetail bd
				WHERE 1 = 1
				<include refid="search" />
				AND m.id = b.mid
				AND b.no = bd.bookNo
                AND t.no = bd.tourNo
				ORDER BY b.no DESC
			)
		)	
		WHERE rnum BETWEEN #{startRow} and #{endRow}
	</select>
	
	<!-- 예약리스트(회원용) -->
	<select id="perList" resultType="com.seoullo.book.vo.BookVO">
		SELECT no, payStatus, payPrice, payMethod, id
		FROM (
			SELECT rownum rnum, no, payStatus, payPrice, payMethod, id
			FROM (
				SELECT DISTINCT b.no, b.payStatus, b.payPrice, b.payMethod, m.id
				FROM booking b, member m, tour t, bookdetail bd
				WHERE 1 = 1
				<include refid="searchForPer" />
				AND m.id = b.mid
				AND b.no = bd.bookNo
                AND t.no = bd.tourNo
                AND m.id = #{id}
				ORDER BY b.no DESC
			)
		)	
		WHERE rnum BETWEEN #{pageObject.startRow} and #{pageObject.endRow}
	</select>
	
	<!-- 페이징 처리를 위한 전체 데이터 갯수 세기 -->
	<select id="getTotalRow" resultType="Long">
		SELECT COUNT(*)
		FROM booking b
		<include refid="searchTable" />
		WHERE 1 = 1
		<include refid="search" />
		<include refid="searchJoin" />
	</select>
	
	<!-- 관리자용 검색기능 (투어이름,예약번호,투어지역,예약상태)-->
	<sql id="search">
		<if test="word != null and word != ''.toString()">
			AND 1 = 0
			<if test="key.indexOf('t'.toString()) >= 0">
				OR title LIKE '%' || #{word} || '%'
			</if>
			<if test="key.indexOf('n'.toString()) >= 0">
				OR b.no LIKE '%' || #{word} || '%'
			</if>
			<if test="key.indexOf('r'.toString()) >= 0">
				OR region LIKE '%' || #{word} || '%'
			</if>
			<if test="key.indexOf('b'.toString()) >= 0">
				OR bookStatus LIKE '%' || #{word} || '%'
			</if>
		</if>
	</sql>
	
	<!-- 회원용 검색기능 (투어이름,예약번호,투어지역) -->
	<sql id="searchForPer">
		<if test="pageObject.word != null and pageObject.word != ''.toString()">
			AND 1 = 0
			<if test="pageObject.key.indexOf('t'.toString()) >= 0">
				OR title LIKE '%' || #{pageObject.word} || '%'
			</if>
			<if test="pageObject.key.indexOf('n'.toString()) >= 0">
				OR b.no LIKE '%' || #{pageObject.word} || '%'
			</if>
			<if test="pageObject.key.indexOf('r'.toString()) >= 0">
				OR region LIKE '%' || #{pageObject.word} || '%'
			</if>
		</if>
	</sql>

	<!-- 검색기능 사용 시 Join조건 넣기 -->
	<sql id="searchJoin">
		<if test="word != null and word != ''.toString()">
			AND m.id = b.mid
			AND b.no = bd.bookNo
	        AND t.no = bd.tourNo
		</if>
	</sql>
	
	<!-- 검색기능 사용시에 불러올 데이터에 해당하는 테이블 추가 -->
	<sql id="searchTable">
		<if test="word != null and word != ''.toString()">
			, member m, tour t, bookdetail bd
		</if>
	</sql>
	
	<!-- 예약자의 정보 불러오기 -->
	<select id="view" resultType="com.seoullo.book.vo.BookVO">
		SELECT b.no, m.id, b.name, b.gender, b.email, b.tel,
				b.bookDate, b.payStatus, b.payMethod, b.payPrice
		FROM booking b, member m
		WHERE m.id = b.mid
		AND b.no = #{no}
	</select>
	
	<!-- 예약자의 투어정보 불러오기 -->
	<select id="viewDetail" resultType="com.seoullo.book.vo.BookDetailVO">
		SELECT bd.no, bd.bookNo, bd.tourNo, t.thumbnail, t.title, t.type, t.region, td.day, bd.peopleA, bd.peopleB, 
		b.payStatus, b.payPrice, bd.bookStatus, t.guideId, b.mId, b.name, b.gender, b.email, b.tel, bd.review
		FROM booking b, bookDetail bd, tour t, tourDate td, member m
		WHERE b.no = bd.bookNo
		AND td.tourNo = bd.tourNo
		AND td.day = bd.day
		AND t.no = td.tourNo
		AND m.id = b.mid
		AND b.no = #{no} 
	</select>
	
	<!-- 가이드의 투어 일자별 리스트 (일자, 투어상태, 예약인원, 마감인원) -->
	<select id="guideList" resultType="com.seoullo.book.vo.GuideVO">
		SELECT day, status, reserveNum, maxNum
		FROM tourDate
		WHERE tourNo = #{tourNo}
		ORDER BY day ASC
	</select>
	
	<!-- 가이드의 투어 일자별 예약자 정보 리스트 -->
	<select id="guideDetailList" resultType="com.seoullo.book.vo.GuideDetailVO">
		SELECT bd.no, b.name, b.tel, b.email, b.gender, bd.peopleA, bd.peopleB, bd.bookStatus, bd.review
		FROM booking b, bookDetail bd, tourDate td
		WHERE bd.day = #{day} and td.tourNo = #{tourNo}
		AND b.no = bd.bookNo
		AND bd.day = td.day
		AND bd.tourNo = td.tourNo
	</select>
	
	<!-- 가장 최근에 INSERT한 예약자 정보 불러오기 -->
	<select id="findBookNo" resultType="long">
		SELECT MAX(no) no FROM booking WHERE mId = #{id}
	</select>
	
	<!-- 예약자 정보 입력 -->
	<insert id="book">
		INSERT INTO booking (no, mId, name, gender, email, tel, payMethod, payStatus ,payPrice)
		VALUES (booking_seq.NEXTVAL, #{id}, #{name}, #{gender}, #{email}, #{tel}, #{payMethod}, #{payStatus}, #{payPrice})
	</insert>
	
	<!-- 예약자의 투어 정보 입력 -->
	<insert id="bookDetail">
		INSERT INTO bookDetail (no, bookNo, tourNo, day, peopleA, peopleB, tourPrice, bookStatus)
		VALUES (bookDetail_seq.NEXTVAL, #{bookNo}, #{tourNo}, #{day}, #{peopleA}, #{peopleB}, #{tourPrice}, #{bookStatus})
	</insert>
	
	<!-- 후기 작성 시 리뷰 상태 변경 -->
	<update id="updateReview">
		update bookDetail set review = '작성완료'
		where no = #{no}
	</update>
	
	<!-- 후기 삭제시 리뷰 상태 변경 -->
	<update id="deleteReview">
		update bookDetail set review = '작성가능'
		where no = #{no}
	</update>
	
	<!-- 예약 취소 -->
	<update id="cancel">
		UPDATE bookdetail SET bookstatus = '예약취소'
		WHERE no = #{no}
	</update>
	
	<!-- 예약 인원 증가 -->
	<update id="incReserveNum">
		UPDATE tourDate SET reservenum = reservenum + (#{peopleA} + #{peopleB})
		WHERE day=#{day} and tourNo=#{tourNo}
	</update>
	
	<!-- 예약 인원 감소 -->
	<update id="decReserveNum">
		UPDATE tourDate SET reservenum = reservenum - (#{peopleA} + #{peopleB})
		WHERE day=#{day} and tourNo=#{tourNo}
	</update>
	
	<!-- 예약 인원 가져오기 -->
	<select id="checkReserveNum" resultType="com.seoullo.book.vo.BookDetailVO">
		SELECT reserveNum, maxNum, status, day, tourNo
		FROM tourDate 
		WHERE day=#{day} and tourNo=#{tourNo}
	</select>
	
	<!-- 예약 변경 -->
	<update id="reserveStatusUpdate">
		UPDATE tourDate SET status = #{status}
		WHERE day=#{day} and tourNo=#{tourNo}
	</update>
	
	<!-- 투어 상태 변경 프로시저 호출 - 예약할 때 -->
	<select id="tourStatusUpdateWhenBooking" statementType="CALLABLE">
		{ CALL tour_Status_at_Reserve (#{tourNo}) }
	</select>
	
	<!-- 투어 상태 변경 프로시저 호출 - 취소할 때 -->
	<select id="tourStatusUpdateWhenCancel" statementType="CALLABLE">
		{ CALL tour_Status_at_Cancel (#{tourNo}) }
	</select>
	
	<!-- 예약자 정보 수정 -->
	<update id="bookInfoUpdate">
		UPDATE booking SET name=#{name}, gender=#{gender}, email=#{email}, tel=#{tel}, payStatus=#{payStatus}
		WHERE no = #{no}
	</update>
	
	<!-- 예약 상태 수정 -->
	<update id="bookStatusUpdate">
		UPDATE bookDetail SET bookStatus = '예약완료'
		WHERE bookNo = #{bookNo} AND bookStatus = '예약대기'
	</update>
</mapper>